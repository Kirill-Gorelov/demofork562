{# <button type="button" class="btn btn-default" id="blog-delete" data-toggle="modal" data-target="#EModalSelect">Добавить по значения</button> #}
<div class="modal fade" id="EModalSelect" role="dialog" aria-labelledby="modalForSelect">
    <div class="modal-dialog" style="min-width: 950px;">
        <div class="modal-content">
        <div class="modal-header">
            <h4 class="modal-title" id="modalForSelect"></h4>
        </div>
        <div class="modal-body">
            <form id="form_serialise">
                <div id="parentId">
                    <div>
                        <nobr>
                            <input name="name[1]" type="text" style="width:300px; " />
                            <a style="color:red;" onclick="return deleteField(this)" href="#">[—]</a>
                            <input name="value[1]" type="text" style="width:300px; " />
                            <a style="color:green;" onclick="return addField()" href="#">[+]</a>
                        </nobr>
                    </div>
                </div>
            </form>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-default update_modal_value" >Добавить</button>
            <button type="button" class="btn btn-default" data-dismiss="modal">
            <span class="fa fa-times"></span>Закрыть
            </button>
        </div>
        </div>
    </div>
</div>


<script>


var ModalSelect = function() { 

    var start = function(){
        // TODO: порядковый номер не вариант, надо приудумать как-то по другому
        r = document.querySelectorAll('.list-group select')
        r.forEach((element, index, arr) => {
            // console.log(element,index, arr);
            if(element.value == 'select'){
                // console.log(index)
                let elem = 'category_cmeta_'+index+'_value';
                let code_value = document.getElementById('category_cmeta_'+index+'_code').value;
                document.getElementById(elem).setAttribute("style", "display: none;");
                document.getElementById(elem).insertAdjacentHTML('afterend', '<button type="button" class="btn btn-default getvalueselect" data-element="'+code_value+'">Редактировать список</button>');
            }
        });
    }

    var loadSelectValue = function(){
        $('.getvalueselect').click(function(){
            $('#EModalSelect').modal();
            document.getElementsByClassName('update_modal_value')['0'].setAttribute("data-element", $(this).data('element'));
            getValueSelect($(this).data('element'));
            updateValueSelect();
        });
        // var number = document.getElementsByClassName('getvalueselect');
        // console.log(number);
        // for (var i = 1; i < number.length; i++) {
        //     var l = number[i];
        //     console.log(l);
        //     l.addEventListener('click', function () {
        //         $('#EModalSelect').modal()
        //         elm = this.getAttribute('data-element');
        //         getValueSelect(elm)
        //     });
        // }
    }

    var updateValueSelect =  function(){
        document.getElementsByClassName('update_modal_value')['0'].addEventListener('click', function () {
            digit = this.getAttribute('data-element');
            console.log(digit);
            let serialise_data = serializeArray(document.querySelector('#form_serialise'));
            console.log(serialise_data);
            
            $.ajax({
                url: '/backend/ajax',
                type: 'POST',
                data: {
                fork: { module: 'EnerIblocks', action: 'UpdateSelectValue' },
                    element:digit,
                    data:serialise_data,
                },
                success: function(data) {
                console.log(data);
                // location.reload();
                }
            });
        });
    }

    var getValueSelect = function(elm){
        //TODO: перередать на fetch или на xmlhttprequest
        console.log(elm);
        $.ajax({
            url: '/backend/ajax',
            type: 'POST',
            data: {
            fork: { module: 'EnerIblocks', action: 'LoadSelectValue' },
            element:elm,
            },
            success: function(data) {
            console.log(data);
            // location.reload();
            }
        });
    }

    var serializeArray = function (form) {
        // Setup our serialized data
        var serialized = [];

        // Loop through each field in the form
        for (var i = 0; i < form.elements.length; i++) {

            var field = form.elements[i];

            // Don't serialize fields without a name, submits, buttons, file and reset inputs, and disabled fields
            if (!field.name || field.disabled || field.type === 'file' || field.type === 'reset' || field.type === 'submit' || field.type === 'button') continue;

            // If a multi-select, get all selections
            if (field.type === 'select-multiple') {
                for (var n = 0; n < field.options.length; n++) {
                    if (!field.options[n].selected) continue;
                    serialized.push({
                        name: field.name,
                        value: field.options[n].value
                    });
                }
            }

            // Convert field data to a query string
            else if ((field.type !== 'checkbox' && field.type !== 'radio') || field.checked) {
                serialized.push({
                    name: field.name,
                    value: field.value
                });
            }
        }

        return serialized;

    }


    return {
        init: function() {
            start();
            loadSelectValue();
            updateValueSelect();
        }
    };

}();

$(window).load(function() { 
    ModalSelect.init();
});
</script>



<script>
var countOfFields = 1; // Текущее число полей
var curFieldNameId = 1; // Уникальное значение для атрибута name

function deleteField(a) {
    if (countOfFields > 1){
        var contDiv = a.parentNode;
        contDiv.parentNode.removeChild(contDiv);
        countOfFields--;
    }
    return false;
}
function addField() {
    countOfFields++;
    curFieldNameId++;
    var div = document.createElement("div");
    div.innerHTML = "<nobr><input name=\"name[" + curFieldNameId + "]\"  type=\"text\" style=\"width:300px; \" />  <a style=\"color:red;\" onclick=\"return deleteField(this)\" href=\"#\">[—]</a> <input name=\"value[" + curFieldNameId + "]\"   type=\"text\" style=\"width:300px; \" /> <a style=\"color:green; \" onclick=\"return addField()\" href=\"#\">[+]</a></nobr>";
    document.getElementById("parentId").appendChild(div);
    return false;
}
</script>